---
---

@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:selector";
@use "common/colors";
@use "common/release";

$column-max-width: 400px;
$column-min-width: 300px;
$container-break: 450px;
$grid-gap: 30px;
$one-column-max-width: calc($column-max-width * 2) - calc($grid-gap * 1);
$two-columns-max-width: calc($column-max-width * 3) - calc($grid-gap * 2);
$mobile-max-width: 700px;

@mixin screen-is-three-columns-wide() {
	@media screen and (width > #{$two-columns-max-width}) {
		@content;
	}
}

@mixin screen-is-two-columns-wide() {
	@media screen and (max-width: #{$two-columns-max-width}) {
		@content;
	}
}

@mixin screen-is-one-column-wide() {
	@media screen and (max-width: #{$one-column-max-width}) {
		@content;
	}
}

@mixin is-mobile() {
	@media screen and (max-width: #{$mobile-max-width}) {
		@content;
	}
}

$anchor-offset: 75px;

$header-background-color: #25282b;
$header-background-image: none;
$header-background-position: 55% 50%;
$header-background-repeat: no-repeat;
$header-background-size: cover;
$header-logo-image: url("/storage/releases/4.5/images/release-logo.svg");
$header-logo-position: center;
$header-logo-repeat: no-repeat;
$header-logo-height: 140px;
$header-logo-size: contain;
$header-gap-top: 80px;
$header-gap-bottom: 80px;
$header-content-color: white;
$header-numbers-gap: 20px;
$header-bar-height: 20px;
$header-bar-commits-color: colors.$godot-blue;
$header-bar-commits-color-inactive: #487491;
$header-bar-contributors-color: #f47e7a;
$header-bar-contributors-color-inactive: #a66160;
$header-bar-gap: 10px;
$header-version-font-weight: 800;

$release-background-end: #bcbcbc;

// -- Clamped-versions (see https://www.marcbacon.com/tools/clamp-calculator/) --
// Target base:           16px
// Viewport base:           16px
// Viewport range: 700px, 1000px

// $release-title-font-size: release.desktop-mobile(35px, 25px);
// Target values:    15px,   17px
$release-title-font-size: clamp(1.563rem, 0.104rem + 3.333vw, 2.188rem);

// $release-section-margin-top: release.desktop-mobile(80px, 40px);
// Target values:    40px,   80px
$release-section-margin-top: clamp(2.5rem, -3.333rem + 13.333vw, 5rem);

// $release-section-margin-bottom: release.desktop-mobile(40px, 20px);
// Target values:    20px,   40px
$release-section-margin-bottom: calc(#{$release-section-margin-top} / 2);

// $card-padding: release.desktop-mobile(17px, 15px);
// Target values:    15px,   17px
$card-padding: clamp(0.938rem, 0.646rem + 0.667vw, 1.063rem);

// $card-title-font-size: release.desktop-mobile(20px, 18px);
// Target values:    18px,   20px
$card-title-font-size: clamp(1.125rem, 0.833rem + 0.667vw, 1.25rem);

// $card-content-font-size-clamp-min: release.desktop-mobile(14px, 0.8em);
// $card-content-font-size-clamp-val: release.desktop-mobile(7cqw, 4cqw);
// $card-content-font-size-clamp-max: release.desktop-mobile(16px, 1em);
// Target values:    14px,   16px
// Viewport range:  400px, 1600px
$card-content-font-size: clamp(0.875rem, 0.833rem + 0.167vw, 1rem);

// $download-gap: release.desktop-mobile(8px, 4px);
// Target values:    4px,   8px
$download-gap: clamp(0.25rem, -0.333rem + 1.333vw, 0.5rem);

// $download-font-size: release.desktop-mobile(18px, 12px);
// Target values:    12px,   18px
$download-font-size: clamp(0.75rem, -0.125rem + 2vw, 1.125rem);
// -- end clamped --

$card-box-shadow: 0 9px 10px -10px #0000008f;

$section-hue-offset: 10;
$sections: release.generate-sections(
	$sections: (
		"foundation",
		"links",
		"highlights",
		"general",
		"platforms",
		"scripting",
		"systems",
		"special-thanks",
	),
	$base-category: "foundation",
	$base-color: colors.$godot-blue,
	$offset: $section-hue-offset,
);
// Add "download" to be a copy of "foundation", and make it on top order-wise.
$sections: map.merge(
	(
		"download": map.get($sections, "foundation"),
	),
	$sections
);

$donate-robot-size: 500px;

@mixin card-media-margin($direction, $margin) {
	@if $direction == "top" {
		margin: calc(-1 * #{$margin})
			calc(-1 * #{$margin}) -1px
			calc(-1 * #{$margin});
		margin: #{"round(down, calc(-1 * #{$margin}), 1px)"}
			#{"round(up, calc(-1 * #{$margin}), 1px)"}
			0
			#{"round(down, calc(-1 * #{$margin}), 1px)"};
	} @else if $direction == "right" {
		margin: calc(-1 * #{$margin})
			calc(-1 * #{$margin})
			calc(-1 * #{$margin} - 1px)
			0;
		margin: #{"round(down, calc(-1 * #{$margin}), 1px)"}
			#{"round(up, calc(-1 * #{$margin}), 1px)"}
			#{"round(up, calc(-1 * #{$margin} - 1px), 1px)"}
			0;
	} @else if $direction == "bottom" {
		margin: 0
			calc(-1 * #{$margin})
			calc(-1 * #{$margin} - 1px)
			calc(-1 * #{$margin});
		margin: 0
			#{"round(up, calc(-1 * #{$margin}), 1px)"}
			#{"round(up, calc(-1 * #{$margin} - 1px), 1px)"}
			#{"round(down, calc(-1 * #{$margin}), 1px)"};
	} @else if $direction == "left" {
		margin: calc(-1 * #{$margin})
			0
			calc(-1 * #{$margin} - 1px)
			calc(-1 * #{$margin});
		margin: #{"round(down, calc(-1 * #{$margin}), 1px)"}
			0
			#{"round(up, calc(-1 * #{$margin} - 1px), 1px)"}
			#{"round(down, calc(-1 * #{$margin}), 1px)"};
	}
}

@mixin text-punch($weight, $force_pure: false) {
	$shadow-color: var(--text-punch-shadow-color);
	@if $force_pure {
		$shadow-color: var(--text-punch-shadow-color-pure);
	}

	@if $weight == micro {
		text-shadow: 0 1.5px 5.5px $shadow-color;
	} @else if list.index((light, bold), $weight) {
		$light-shadow: 0 1.5px 2.5px $shadow-color;
		$bold-shadow: 0px 1px 1px $shadow-color;

		@if $weight == light {
			text-shadow: $light-shadow;
		} @else {
			text-shadow: $light-shadow, $bold-shadow;
		}
	} @else {
		@error "#{$weight} is not a valid text-punch value.";
	}
}

:root {
	font-size: 16px;

	--card-padding: #{$card-padding};
	--one-column-max-width: #{$one-column-max-width};
	--two-columns-max-width: #{$two-columns-max-width};

	& {
		--color-code-symbol: #{colors.$code-symbol--light};
		--color-code-keyword: #{colors.$code-keyword--light};
		--color-code-controlflow: #{colors.$code-controlflow--light};
		--color-code-basetype: #{colors.$code-basetype--light};
		--color-code-enginetype: #{colors.$code-enginetype--light};
		--color-code-usertype: #{colors.$code-usertype--light};
		--color-code-comment: #{colors.$code-comment--light};
		--color-code-string: #{colors.$code-string--light};
		--color-code-background: #{colors.$code-background--light};
		--color-code-text: #{colors.$code-text--light};
		--color-code-function: #{colors.$code-function--light};
		--color-code-membervariable: #{colors.$code-membervariable--light};
		--color-code-gdscript-function: #{colors.$code-gdscript-function--light};
		--color-code-gdscript-globalfunction: #{colors.$code-gdscript-globalfunction--light};
		--color-code-gdscript-nodepath: #{colors.$code-gdscript-nodepath--light};
		--color-code-gdscript-nodereference: #{colors.$code-gdscript-nodereference--light};
		--color-code-gdscript-annotation: #{colors.$code-gdscript-annotation--light};
		--color-code-gdscript-stringname: #{colors.$code-gdscript-stringname--light};

		@include release.is-dark() {
			--color-code-symbol: #{colors.$code-symbol--dark};
			--color-code-keyword: #{colors.$code-keyword--dark};
			--color-code-controlflow: #{colors.$code-controlflow--dark};
			--color-code-basetype: #{colors.$code-basetype--dark};
			--color-code-enginetype: #{colors.$code-enginetype--dark};
			--color-code-usertype: #{colors.$code-usertype--dark};
			--color-code-comment: #{colors.$code-comment--dark};
			--color-code-string: #{colors.$code-string--dark};
			--color-code-background: #{colors.$code-background--dark};
			--color-code-text: #{colors.$code-text--dark};
			--color-code-function: #{colors.$code-function--dark};
			--color-code-membervariable: #{colors.$code-membervariable--dark};
			--color-code-gdscript-function: #{colors.$code-gdscript-function--dark};
			--color-code-gdscript-globalfunction: #{colors.$code-gdscript-globalfunction--dark};
			--color-code-gdscript-nodepath: #{colors.$code-gdscript-nodepath--dark};
			--color-code-gdscript-nodereference: #{colors.$code-gdscript-nodereference--dark};
			--color-code-gdscript-annotation: #{colors.$code-gdscript-annotation--dark};
			--color-code-gdscript-stringname: #{colors.$code-gdscript-stringname--dark};
		}
	}

	& {
		--text-punch-shadow-color--base--dark: black;
		--text-punch-shadow-color--layer--dark: transparent 20%;
		--text-punch-shadow-color--base--light: var(
			--text-punch-shadow-color--base--dark
		);
		--text-punch-shadow-color--layer--light: transparent 92.5%;
		--text-punch-shadow-color-dark: color-mix(
			in oklab,
			var(--text-punch-shadow-color--base--dark),
			var(--text-punch-shadow-color--layer--dark)
		);
		--text-punch-shadow-color-light: color-mix(
			in oklab,
			var(--text-punch-shadow-color--base--light),
			var(--text-punch-shadow-color--layer--light)
		);
		--text-punch-shadow-color-default: var(--text-punch-shadow-color-dark);
		--text-punch-shadow-color: var(--text-punch-shadow-color-default);
		@include release.is-light() {
			--text-punch-shadow-color-default: var(--text-punch-shadow-color-light);
		}
	}

	& {
		& {
			--code-highlight-background-color-light: transparent;
			--code-highlight-background-color-dark: color-mix(
				in oklab,
				var(--color-code-background),
				transparent 5%
			);
			--code-highlight-background-color-default: var(
				--code-highlight-background-color-light
			);
			--code-highlight-background-color: var(
				--code-highlight-background-color-default
			);
			@include release.is-dark() {
				--code-highlight-background-color-default: var(
					--code-highlight-background-color-dark
				);
			}
		}

		& {
			--code-highlight-padding-light: 0;
			--code-highlight-padding-dark: 0 0.25em;
			--code-highlight-padding-default: var(--code-highlight-padding-light);
			--code-highlight-padding: var(--code-highlight-padding-default);
			@include release.is-dark() {
				--code-highlight-padding-default: var(--code-highlight-padding-dark);
			}
		}
	}

	& {
		scroll-behavior: smooth;
		scroll-padding-top: var(--card-padding);
	}

	@media (prefers-reduced-motion) {
		scroll-behavior: auto;
	}
}

#release-header-background-video {
	height: 100%;
	width: 100%;
	object-fit: cover;
}

#scroll-to-top {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 1;
	pointer-events: none;

	.link {
		pointer-events: all;
		position: fixed;
		bottom: 0;
		right: 0;
		width: 50px;
		height: 50px;
		margin: var(--card-padding);
		text-decoration: none;
		background-color: white;
		border-radius: var(--card-padding);

		display: flex;
		align-items: center;
		justify-content: center;
		box-shadow: rgba(0, 0, 0, 25%) 1px 1px 5px;

		color: black;
		font-size: 1.5em;

		@include text-punch($weight: bold);

		&:hover {
			span {
				font-size: 35px;
			}
		}

		span {
			transition: font-size 0.2s ease-in-out;
			transform: translateY(-3px);
		}
	}
}

#foundation-donate {
	--text-punch-shadow-color: var(--text-punch-shadow-color-default);

	background-color: #eff1f5;
	@include release.is-dark() {
		background-color: #283a5b;
	}

	.robot-1,
	.robot-2 {
		color: #cfd5e0;
		font-size: $donate-robot-size;
		position: absolute;
		z-index: -1;

		@include release.is-dark() {
			color: #233452;
		}
	}

	.robot-1 {
		// Top left.
		top: 0;
		left: 0;
		transform: translateX(-250px) translateY(-40cqh) rotate(180deg);
	}

	.robot-2 {
		// Bottom right.
		bottom: 0;
		right: 0;
		transform: translateX(250px) translateY(40cqh);
	}

	.c-blockquote {
		margin-top: auto;
		margin-bottom: auto;
	}

	.release-card-media {
		justify-content: end;
	}
}

#download-download {
	--text-punch-shadow-color: var(--text-punch-shadow-color-default);

	.release-card-media {
		.release-platform {
			display: none;
			margin: var(--card-padding);

			&.active {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: var(--card-padding);
			}

			.release-button {
				display: flex;
				flex-direction: column;
				align-items: center;
			}

			.main-download-details {
				font-size: 14px;
				opacity: 0.6;

				--text-punch-shadow-color: var(--text-punch-shadow-color-default);
				@include text-punch($weight: micro);
			}

			.download-button {
				--text-punch-shadow-color: var(--text-punch-shadow-color-dark);

				display: grid;
				gap: var(--card-padding);
				padding: 0;
				grid-template-columns: auto 1fr;
				text-align: center;
				align-items: center;
				text-decoration: none;
				background-color: var(--primary-color);
				color: white;
				line-height: 32px;

				@include text-punch($weight: bold);

				.download-title {
					display: flex;
					flex-direction: row;
					gap: var(--card-padding);
					color: var(--primary-color-text-title);
					font-size: 20px;

					img {
						display: inline-block;
						filter: invert(1);
						margin-left: var(--card-padding);
						width: 22px;
						vertical-align: text-bottom;
					}
				}
				.download-hint {
					--text-punch-shadow-color: var(--text-punch-shadow-color-light);

					display: flex;
					flex-direction: column;
					justify-content: center;

					background-color: var(--primary-color-text-title);
					color: var(--dark-color);
					padding: 12px 16px;
					font-weight: bold;
					border-radius: 0 var(--button-border-radius)
						var(--button-border-radius) 0;
					height: 100%;
					box-sizing: border-box;

					@include text-punch($weight: bold);
				}
			}

			.download-net-button {
				background-color: rgba(0, 0, 0, 27%);
				-webkit-backdrop-filter: blur(4px);
				backdrop-filter: blur(4px);
			}
		}
	}

	.c-blockquote {
		text-align: center;
		max-width: 500px;
		margin: auto;
	}
}

#links {
	margin-top: 0;
	margin-bottom: 0;
	.release-card {
		box-shadow: none;
	}
}

.links-container {
	--text-punch-shadow-color: var(--text-punch-shadow-color-dark);

	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;

	display: flex;
	flex-wrap: wrap;
	gap: calc(var(--card-padding) / 2);
	align-items: center;
	justify-content: center;

	@include text-punch($weight: bold);

	& > li {
		margin: 0;
	}

	.link {
		display: flex;
		min-width: 50px;
		align-items: center;
		justify-content: center;
		padding: calc(var(--card-padding) / 2);
		border-radius: calc(var(--card-padding) / 2);
		text-decoration: none;
		color: white;
		box-shadow: $card-box-shadow;

		font-size: 1em;
		font-weight: 800;

		background: linear-gradient(
			to bottom,
			var(--color-top),
			var(--color-bottom)
		);

		@at-root #{selector.replace(&, ".links-container", ".links-container.links-container-subsections")} {
			font-weight: 600;
			--color-top: var(--color-top-muted);
			--color-bottom: var(--color-bottom-muted);
		}
		@at-root #{selector.replace(&, ".links-container", ".links-container.main-list")} {
			font-size: 150%;
			@each $section-name, $section-colors in $sections {
				&.link-#{$section-name} {
					--color-top: #{map.get($section-colors, "color-top")};
					--color-bottom: #{map.get($section-colors, "color-bottom")};
				}
			}
		}

		&:hover {
			& > span {
				text-decoration: underline;
			}
		}
	}

	&.main-list {
		font-size: 150%;

		.link {
			@each $section-name, $section-colors in $sections {
				&.link-#{$section-name} {
					--color-top: #{map.get($section-colors, "color-top")};
					--color-bottom: #{map.get($section-colors, "color-bottom")};
				}
			}
		}
	}
}

#special-thanks-release-authors {
	.release-card-media {
		.release-card-authors {
			--text-punch-shadow-color: var(--text-punch-shadow-color-default);

			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			align-items: center;
			justify-content: space-between;
			gap: 10px;
			padding: var(--card-padding);

			@include text-punch($weight: light);

			&::after {
				content: "";
				flex: auto;
			}

			.release-card-author {
				line-height: 0.5em;
				font-size: 12px;

				&.size-1 {
					font-size: 14px;
				}

				&.size-2 {
					font-size: 16px;
				}

				&.size-3 {
					font-size: 20px;
				}

				&.size-4 {
					font-size: 22px;
				}

				&.size-5 {
					font-size: 24px;
				}

				&.size-6 {
					font-size: 26px;
				}

				a {
					color: black;
					text-decoration: none;
					text-decoration-color: black;

					@include release.is-dark() {
						color: white;
						text-decoration-color: white;
					}

					&:hover {
						text-decoration: underline;
					}
				}
			}
		}
	}
}

#special-thanks-remi {
	.c-blockquote {
		padding-left: var(--card-padding);
		border-left: 2px solid gray;
		font-size: var(--card-content-font-size);
		font-weight: 400;
		font-style: italic;

		& > p {
			line-height: 1.5;
			margin: 16px 0;

			&:first-child {
				margin-top: 0;
			}
			&:last-child {
				margin-bottom: 0;
			}
		}
	}
}

#special-thanks-credits {
	p:has(+ .c-content-assets) {
		margin-bottom: 0;
	}

	.c-content-assets {
		margin: 0;

		li {
			line-height: 1;
			margin-bottom: 0;
		}
	}
}

#highlights {
	margin-top: var(--release-section-margin-bottom);
}

.release-container {
	position: relative;
	width: 100%;
	height: 100%;
	background-color: #25282b;

	/**
	 * Responsive sizes.
	 */
	--release-title-font-size: #{$release-title-font-size};
	--release-section-margin-top: #{$release-section-margin-top};
	--release-section-margin-bottom: #{$release-section-margin-bottom};

	--card-padding: #{$card-padding};
	--card-title-font-size: #{$card-title-font-size};
	--card-content-font-size: #{$card-content-font-size};

	--download-gap: #{$download-gap};
	--download-font-size: #{$download-font-size};

	/** Color **/
	& {
		--card-background-color: white;
		--card-color: #2d2d2d;

		@include release.is-dark() {
			--card-background-color: #333639;
			--card-color: white;
		}
	}

	a {
		text-decoration-thickness: 1px;
	}

	@include release.is-light() {
		background-color: #cecece;
	}

	figure.file {
		margin: var(--card-padding) 0;

		figcaption {
			margin: calc(var(--card-padding) / 4) 0;
			color: color-mix(in oklab, var(--card-color), transparent 20%);
			@include text-punch($weight: light);

			&::before {
				content: "📄";
				margin-left: var(--card-padding);
				margin-right: calc(var(--card-padding) / 2);
			}
		}
	}

	pre:has(code.highlight, .code-highlight) {
		font-family: unset;
		background: unset;
		padding: unset;
		margin: unset;
		font-size: unset;
		line-height: unset;
		border-radius: unset;
		overflow-y: unset;

		code.highlight,
		.code-highlight {
			width: 100%;
			box-sizing: border-box;
		}

		& + pre:has(code.highlight, .code-highlight) {
			margin-top: var(--card-padding);
		}
	}

	@mixin code-highlight() {
		margin: 0 0;
		border-radius: 5px;
		white-space: break-spaces;
		hyphens: none;

		line-height: normal;
		color: var(--color-code-text);
		font-family:
			ui-monospace,
			SFMono-Regular,
			SF Mono,
			Menlo,
			Consolas,
			Liberation Mono,
			monospace;

		background-color: var(--code-highlight-background-color);
		padding: var(--code-highlight-padding);

		@include text-punch($weight: micro);

		@include release.is-dark() {
			background-color: color-mix(
				in oklab,
				var(--color-code-background),
				transparent 50%
			);
		}

		@each $key
			in (
				symbol
					keyword
					controlflow
					basetype
					enginetype
					usertype
					comment
					function
					membervariable
					gdscript-globalfunction
					gdscript-annotation
			)
		{
			.#{$key},
			&.#{$key} {
				color: var(--color-code-#{$key});
			}
		}
	}

	& {
		code.highlight,
		.code-highlight {
			@include code-highlight();
		}
		code.highlight {
			display: block;

			& {
				// Add border specifically for the <code> block content.
				border: 1px solid color-mix(in oklab, transparent, black 10%);
				@include release.is-dark() {
					border-color: color-mix(in oklab, transparent, white 10%);
				}
			}

			& {
				--code-highlight-padding: var(--card-padding);
				@include release.is-dark() {
					--code-highlight-padding: var(--card-padding);
				}
			}

			& {
				box-shadow: 0 1px 5px var(--text-punch-shadow-color);
			}
		}
		.code-highlight {
			display: inline;
		}
	}

	.replace-me {
		&::before {
			content: "TODO: replace me";
		}
		color: red !important;
	}

	a[href=""],
	a:not([href]) {
		color: red !important;
	}

	.release-header {
		position: relative;

		perspective: 1px;
		transform-style: preserve-3d;
		overflow: hidden;

		.release-header-background {
			content: "";
			position: absolute;
			top: -64px;
			left: 0;
			width: 100%;
			height: calc(100% + 64px);
			background-image: $header-background-image;
			background-position: $header-background-position;
			background-repeat: $header-background-repeat;
			background-size: $header-background-size;
			transform: translateZ(-1px) scale(2);
		}

		.release-header-content {
			position: relative;
			z-index: 1;
			padding-top: $header-gap-top;
			padding-bottom: $header-gap-bottom * 2;

			.container {
				overflow: visible;
			}

			.header-main-title {
				background-image: $header-logo-image;
				background-repeat: $header-logo-repeat;
				background-position: $header-logo-position;
				background-size: $header-logo-size;
				height: $header-logo-height;
				margin-bottom: 60px;
				filter: drop-shadow(
						0 0 30px color-mix(in oklab, black, transparent 75%)
					)
					drop-shadow(0 0 10px black) drop-shadow(0 0 1px black); // To give it some distinction from the background

				.header-main-title-text {
					display: none;
				}

				// Margin between the title and the first .header-content
				& + .header-content {
					margin-top: 30vh;
				}
			}

			.header-content {
				color: $header-content-color;
				gap: 20px;
				padding: var(--card-padding);
				margin-top: var(--card-padding);
				border-radius: var(--card-padding);
				backdrop-filter: blur(10px);
				background-color: rgba(0, 0, 0, 0.75);
				box-shadow: $card-box-shadow;

				hr {
					border-color: white;
				}

				.header-text {
					--text-punch-shadow-color: var(--text-punch-shadow-color-dark);
					@include text-punch($weight: micro);

					> .header-title {
						color: $header-content-color;
						@include text-punch($weight: bold);
					}
				}

				p {
					&:first-child {
						margin-top: 0;
					}
					&:last-child {
						margin-bottom: 0;
					}
				}

				&.header-content-note {
					font-size: 75%;
					@include text-punch($weight: micro);

					.header-note-title {
						font-style: italic;
						font-weight: 800;
						font-size: 125%;
						@include text-punch($weight: bold);
					}
				}
			} // .header-content

			.header-background-author-container {
				padding: calc(var(--card-padding) / 2);
				width: fit-content;
				margin-left: auto;
				margin-right: auto;

				.header-background-author {
					position: relative;
					right: 0;
					font-size: 60%;
					font-weight: 600;
					color: white;
					border-top-left-radius: 9999px;
					border-bottom-right-radius: 9999px;
					padding: 0.25em 0.75em 0.35em 1.25em;

					a {
						color: white;
						text-decoration-color: white;
					}
				}
			}
		}
	}

	.release-content {
		position: relative;
		top: -70px;
		margin-top: 0;
		color: black;

		.release-cards {
			display: grid;
			width: 100%;
			gap: var(--card-padding);
			grid-template-columns: repeat(3, minmax($column-min-width, 1fr));
			grid-auto-flow: row dense;

			transform: translateY(0);

			&.two-columns {
				grid-template-columns: repeat(2, minmax($column-min-width, 1fr));
			}

			@include screen-is-two-columns-wide() {
				grid-template-columns: repeat(2, minmax($column-min-width, 1fr));
			}

			@include screen-is-one-column-wide() {
				&,
				&.two-columns {
					grid-template-columns: minmax($column-min-width, 1fr);
				}
			}
		}

		.release-card {
			container-type: inline-size;
			container-name: release-card;

			contain: paint;
			border-radius: var(--card-padding);
			padding: var(--card-padding);

			background-color: var(--card-background-color);
			color: var(--card-color);
			box-shadow: $card-box-shadow;

			&.transparent-card {
				background-color: transparent;
				box-shadow: none;
			}

			@mixin media-top() {
				grid-template-areas:
					"media"
					"content";
				grid-template-rows:
					auto
					minmax(max-content, 1fr);
				grid-template-columns: 1fr;

				&:has(.release-card-image, .release-card-video) {
					// Makes sure that we limit the height of media, but not other content.
					grid-template-rows:
						minmax(auto, 30cqh)
						minmax(max-content, 1fr);
				}

				.release-card-media {
					@include card-media-margin("top", var(--card-padding));
				}
			}

			@mixin media-bottom() {
				grid-template-areas:
					"content"
					"media";
				grid-template-rows:
					minmax(max-content, 1fr)
					auto;
				grid-template-columns: 1fr;

				&:has(.release-card-image, .release-card-video) {
					// Makes sure that we limit the height of media, but not other content.
					grid-template-rows:
						minmax(max-content, 1fr)
						minmax(auto, 30cqh);
				}

				.release-card-media {
					@include card-media-margin("bottom", var(--card-padding));
				}
			}

			@mixin media-left() {
				grid-template-areas: "media content";
				grid-template-columns: minmax(auto, 40cqw) minmax(30%, 1fr);
				grid-template-rows: 1fr;

				.release-card-media {
					@include card-media-margin("left", var(--card-padding));
				}
			}

			@mixin media-right() {
				grid-template-areas: "content media";
				grid-template-columns: minmax(30%, 1fr) minmax(auto, 40cqw);
				grid-template-rows: 1fr;

				.release-card-media {
					@include card-media-margin("right", var(--card-padding));
				}
			}

			&.media-top .release-card-container {
				@include media-top();
			}
			&.media-bottom .release-card-container {
				@include media-bottom();
			}
			&.media-left .release-card-container {
				@include media-left();
				@container release-card (width <= #{$container-break}) {
					@include media-top();
				}
			}
			&.media-right .release-card-container {
				@include media-right();
				@container release-card (width <= #{$container-break}) {
					@include media-bottom();
				}
			}

			& *::selection {
				background-color: var(--color-selection);
			}

			&.inverted {
				--text-punch-shadow-color: var(--text-punch-shadow-color-dark);
				--code-highlight-background-color: var(
					--code-highlight-background-color-dark
				);
				--code-highlight-padding: var(--code-highlight-padding-dark);

				background: var(--color-top)
					linear-gradient(to bottom, var(--color-top), var(--color-bottom));
				color: white;

				.release-card-container {
					.release-card-content .release-card-content-container {
						.code-highlight {
							--text-punch-shadow-color: var(--text-punch-shadow-color-light);
						}

						.c-title {
							color: white;

							& > a {
								color: white;
							}
						}

						.c-blockquote {
							color: white;

							span.highlight {
								color: var(--color-invert-highlight);
							}
						}

						.c-content {
							a {
								@mixin setup-a-color($color) {
									color: $color;
									text-decoration-color: $color;

									.code-highlight {
										text-decoration: underline;
										text-decoration-color: $color;
									}

									&:hover {
										.code-highlight {
											text-decoration: underline;
											text-decoration-color: $color;
										}
									}
								}

								@include setup-a-color($color: var(--color-invert-highlight));

								&:visited {
									@include setup-a-color(
										$color: color-mix(
												in oklab,
												var(--color-invert-highlight),
												black 10%
											)
									);
								}
							}

							.links-container {
								a,
								a:visited {
									color: white;
									text-decoration-color: white;
								}
							}

							.footnotes {
								border-top-color: color-mix(in oklab, white, transparent 90%);
							}
						}

						.c-link {
							.c-link-a {
								@mixin inverted-c-link-a {
									$link-color: var(--color-invert-highlight);
									color: $link-color;
									text-decoration-color: $link-color;

									$color-mix-value: 10%;

									&:visited {
										$color: color-mix(in oklab, $link-color, black 15%);
										color: $color;
										text-decoration-color: $color;
									}
								}

								@include inverted-c-link-a();

								@include release.is-dark() {
									@include inverted-c-link-a();
								}
							}

							.contributor-area {
								.contributor-list {
									a {
										color: var(--color-invert-highlight);
										text-decoration-color: var(--color-invert-highlight);
									}
								}
							}
						}
					}
				}
			}

			.release-card-container {
				display: grid;
				gap: var(--card-padding);
				grid-template-areas: "content";

				height: 100%;

				.release-card-content {
					grid-area: content;
					container-type: inline-size;
					container-name: release-card-content;

					.release-card-content-container {
						gap: var(--card-padding);
						height: 100%;

						// Base display properties for browsers who don't support `:has()`.
						display: flex;
						flex-direction: column;

						&:has(.c-title):has(.c-blockquote):has(.c-content) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"quote title"
								"quote content"
								"quote link";
							grid-template-columns: 2fr 3fr;
							grid-template-rows:
								min-content
								1fr
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas:
									"quote title"
									"quote content";
								grid-template-rows:
									min-content
									1fr;
							}

							&.force-one-column {
								grid-template-areas:
									"quote"
									"title"
									"content"
									"link";
								grid-template-columns: 1fr;
								grid-template-rows:
									min-content
									auto
									1fr
									auto;

								&:not(:has(.c-link)) {
									grid-template-areas:
										"quote"
										"title"
										"content";
									grid-template-rows:
										min-content
										auto
										1fr;
								}
							}

							@container release-card-content (width < #{$container-break}) {
								grid-template-areas:
									"quote"
									"title"
									"content"
									"link";
								grid-template-columns: 1fr;
								grid-template-rows:
									min-content
									auto
									1fr
									auto;

								&:not(:has(.c-link)) {
									grid-template-areas:
										"quote"
										"title"
										"content";
									grid-template-rows:
										min-content
										auto
										1fr;
								}
							}
						}
						&:not(:has(.c-title)):has(.c-blockquote):has(.c-content) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"quote content"
								"quote link";
							grid-template-columns: 2fr 3fr;
							grid-template-rows:
								1fr
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas: "quote content";
								grid-template-rows: 1fr;
							}

							&.force-one-column {
								grid-template-areas:
									"quote"
									"content"
									"link";
								grid-template-columns: 1fr;
								grid-template-rows:
									min-content
									1fr
									auto;

								&:not(:has(.c-link)) {
									grid-template-areas:
										"quote"
										"content";
									grid-template-rows:
										min-content
										1fr;
								}
							}

							@container release-card-content (width < #{$container-break}) {
								grid-template-areas:
									"quote"
									"content"
									"link";
								grid-template-columns: 1fr;
								grid-template-rows:
									min-content
									1fr
									auto;

								&:not(:has(.c-link)) {
									grid-template-areas:
										"quote"
										"content";
									grid-template-rows:
										min-content
										1fr;
								}
							}
						}
						&:has(.c-title):has(.c-blockquote):not(:has(.c-content)) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"title"
								"quote"
								"link";
							grid-template-rows:
								min-content
								1fr
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas:
									"title"
									"quote";
								grid-template-rows:
									min-content
									1fr;
							}
						}
						&:has(.c-title):not(:has(.c-blockquote)):has(.c-content) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"title"
								"content"
								"link";
							grid-template-rows:
								min-content
								1fr
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas:
									"title"
									"content";
								grid-template-rows:
									min-content
									1fr;
							}
						}
						&:not(:has(.c-title)):has(.c-blockquote):not(:has(.c-content)) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"quote"
								"link";
							grid-template-rows:
								auto
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas: "quote";
								grid-template-rows: auto;
							}
						}
						&:not(:has(.c-title)):not(:has(.c-blockquote)):has(.c-content) {
							display: grid;
							flex-direction: unset;

							grid-template-areas:
								"content"
								"link";
							grid-template-rows:
								auto
								auto;

							&:not(:has(.c-link)) {
								grid-template-areas: "content";
								grid-template-rows: auto;
							}
						}

						.c-title {
							grid-area: title;
							margin-bottom: 0;
							color: var(--color-top);
							font-weight: 700;
							font-size: var(--card-title-font-size);

							@include text-punch($weight: bold);

							a {
								text-decoration: none;
								color: var(--color-top);
								@include release.is-dark() {
									color: white;
									text-decoration-color: white;
								}

								&:hover {
									text-decoration: underline;
									text-decoration-color: var(--color-top);

									code.highlight,
									.code-highlight {
										text-decoration: underline;
										text-decoration-color: var(--color-top);
									}
								}

								p {
									line-height: normal;
									margin: 0;
								}
							}

							.code-highlight {
								@include text-punch($weight: bold);
							}
						}

						.c-blockquote {
							grid-area: quote;
							font-size: clamp(30px, 7cqw, 35px);
							font-weight: 800;

							@include text-punch($weight: bold);

							p {
								line-height: normal;
								margin: 0;
							}

							span.highlight {
								color: var(--color-highlight);
							}
						}

						.c-content {
							grid-area: content;
							font-size: var(--card-content-font-size);

							@include text-punch($weight: micro);

							& > p,
							& > ul {
								&:first-child {
									margin-top: 0;
								}
								&:last-child {
									margin-bottom: 0;
								}
							}

							& > ul:last-child > li:last-child {
								margin-bottom: 0;
							}

							.links-container {
								a,
								a:visited {
									color: white;
									text-decoration-color: white;
								}
							}

							a {
								@mixin setup-a-color($color) {
									color: $color;
									text-decoration-color: $color;

									.code-highlight {
										text-decoration: underline;
										text-decoration-color: $color;
									}

									&:hover {
										.code-highlight {
											text-decoration: underline;
											text-decoration-color: $color;
										}
									}
								}

								@include setup-a-color($color: var(--color-highlight));

								&:visited {
									@include setup-a-color(
										$color: color-mix(
												in oklab,
												var(--color-highlight),
												black 10%
											)
									);
								}
							}

							.footnotes {
								border-top: 1px solid
									color-mix(in oklab, black, transparent 90%);
							}
						}

						.c-link {
							grid-area: link;
							position: relative;
							margin-top: 10px;
							color: inherit;
							user-select: none;

							@include text-punch($weight: light);

							.c-link-a {
								color: black;
								text-decoration-color: black;
								text-decoration: underline;
								font-size: 21px;
								font-weight: 700;

								$color-mix-value: 10%;

								&:visited {
									$color: color-mix(
										in oklab,
										black,
										var(--color-highlight) 50%
									);
									color: $color;
									text-decoration-color: $color;
								}

								@include release.is-dark() {
									color: white;
									text-decoration-color: white;

									&:visited {
										$color: color-mix(
											in oklab,
											white,
											var(--color-highlight) 50%
										);
										color: $color;
										text-decoration-color: $color;
									}
								}
							}

							.contributor-area {
								display: grid;
								grid-template-areas: "icon list";
								grid-template-columns: 50px auto;

								margin-top: 1em;
								font-size: 80%;
								user-select: auto;

								@include text-punch($weight: micro);

								.contributor-icon {
									grid-area: icon;
									display: flex;
									align-items: center;
								}

								.contributor-list {
									grid-area: list;
									display: flex;
									align-items: center;

									a {
										color: var(--color-highlight);
										text-decoration-color: var(--color-highlight);

										@include text-punch($weight: light);
									}
								}
							}
						}
					}
				}

				.release-card-media {
					--text-punch-shadow-color: var(--text-punch-shadow-color-dark);

					grid-area: media;

					position: relative;
					contain: paint;
					container-type: inline-size;
					container-name: release-card-media;

					@mixin release-card-label {
						position: absolute;
						top: 0;
						left: 0;
						font-size: 1em;
						font-weight: 700;
						color: white;
						-webkit-text-stroke: 2px black;
						paint-order: stroke fill;
						margin: 0.5em;

						@include text-punch($weight: bold);
					}

					@mixin release-card-right {
						--mask-width: 50%;
						mask-image: linear-gradient(
							to right,
							transparent 0%,
							transparent var(--mask-width, 50%),
							white calc(var(--mask-width, 50%) + 0.000001%),
							white
						);

						.release-card-label {
							left: unset;
							right: 0;
						}
					}

					.release-card-carousel-container {
						height: 100%;

						.release-card-carousel-left,
						.release-card-carousel-right {
							position: absolute;
							width: 100%;
							height: 100%;
						}

						.release-card-carousel-control {
							$height: 4em;
							display: flex;
							position: absolute;
							top: calc(50% - #{calc($height / 2)});
							left: 0;
							width: $height;
							height: $height;
							align-items: center;
							justify-content: center;
							cursor: pointer;
							background: none;
							color: var(--color-top);

							--control-background-color-base: color-mix(
								in oklab,
								white,
								var(--color-top) 50%
							);

							&:focus {
								outline: 0.125rem solid var(--color-top);
							}

							&:hover {
								background-color: color-mix(
									in oklab,
									var(--control-background-color-base),
									transparent 90%
								);
							}

							&:active {
								background-color: color-mix(
									in oklab,
									var(--control-background-color-base),
									transparent 70%
								);
							}

							.character {
								user-select: none;
								font-size: 300%;
								transform: translate(0, -0.1em);
								@include text-punch($weight: bold);
							}

							&--right {
								left: unset;
								right: 0;
							}
						}

						&--has-comparison {
							.release-card-carousel-right {
								@include release-card-right();
							}
						}
					}

					.release-card-comparison {
						$comparison-range-indicator-width: 0.25em;

						position: absolute;
						top: 0;
						left: 0;
						width: 100%;
						height: 100%;

						// The indicator is the black bar.
						.comparison-range-indicator {
							position: absolute;
							top: -2px;
							left: calc(50% - ($comparison-range-indicator-width / 2));
							width: 0.25em;
							height: calc(100% + 4px);
							background-color: color-mix(
								in oklab,
								var(--color-top),
								black 50%
							);
						}

						.comparison-range {
							position: absolute;
							top: -2px;
							left: 0;
							width: 100%;
							height: calc(100% + 4px);
							background-color: transparent;
							user-select: none;

							-webkit-appearance: none !important;
							appearance: none;

							overflow: hidden;

							// Create a mixin here because Chromium doesn't like
							// to have its `::-webkit-slider-thumb` as a co-declared
							// style with `::-moz-range-thumb`.
							@mixin thumb() {
								-webkit-appearance: none !important;
								appearance: none;

								background-color: transparent;
								color: transparent;
								border: none;
							}

							&::-moz-range-thumb {
								@include thumb();
							}
							&::-webkit-slider-thumb {
								@include thumb();
							}

							&::-moz-range-track,
							&::-webkit-slider-runnable-track {
								-webkit-appearance: none !important;
								appearance: none;
							}

							&:focus {
								outline: none;
							}
						}
					}

					@each $type in (video, image) {
						.release-card-#{$type}-container {
							position: absolute;
							width: 100%;
							height: 100%;
						}

						.release-card-#{$type}-label {
							@include release-card-label();
						}

						.#{$type}-comparison-b {
							@include release-card-right();
						}
					}

					.release-card-video,
					.release-card-image {
						position: absolute;
						top: 0;
						left: 0;
						width: 100%;
						height: 100%;
						object-fit: cover;
						overflow: hidden;

						@each $vertical in ("top", "center", "bottom") {
							@each $horizontal in ("left", "center", "right") {
								&.position-#{$vertical}-#{$horizontal} {
									object-position: #{$vertical} #{$horizontal};
								}
							}
						}
					}

					&:has(> .release-card-button) {
						display: grid;
						justify-content: center;
						align-items: center;
					}

					.release-card-button {
						--text-punch-shadow-color: var(--text-punch-shadow-color-dark);

						display: flex;
						justify-content: center;
						align-items: center;
						text-align: center;
						font-weight: 700;

						background-color: var(--color-top);
						color: white;

						margin: var(--card-padding);
						padding: var(--card-padding);
						border-radius: 14px;

						text-decoration: none;
						cursor: pointer;

						@include text-punch($weight: light);
					}

					.release-card-content-creator {
						position: absolute;
						bottom: 0;
						right: 0;
						width: fit-content;
						font-size: 60%;
						color: white;
						font-weight: 600;
						background-color: rgba(0, 0, 0, 0.75);
						border-top-left-radius: 999999px;
						padding: 0.25em 0.75em 0.35em 1.25em;

						a {
							// color: var(--color-invert);
							//text-decoration-color: var(--color-invert);
							color: white;
							text-decoration-color: white;
						}

						p {
							margin: 0;
						}
					}
				}
			}
		}

		.section {
			margin-top: var(--release-section-margin-top);
			margin-bottom: var(--release-section-margin-bottom);
			&:first-of-type {
				margin-top: 0;
			}
			&:last-of-type {
				margin-bottom: 0;
			}

			&.subsection {
				--color-top: var(--color-top-muted);
				--color-bottom: var(--color-bottom-muted);
			}

			// Remove margins from the .subsection under a .section
			&:has(+ .subsection) {
				margin-bottom: 0;
			}
			& + .subsection {
				margin-top: 0;
			}

			.section-title {
				--text-punch-shadow-color: var(--text-punch-shadow-color-dark);

				container-type: inline-size;
				container-name: section-title;
				margin-bottom: calc(var(--card-padding) * 2);
			}

			.section-title h3,
			.section-title h4 {
				position: relative;
				background: var(--color-top)
					linear-gradient(to bottom, var(--color-top), var(--color-bottom));
				padding: calc(var(--card-padding) * 2);
				border-radius: var(--card-padding);
				margin-bottom: 0;
				box-shadow: $card-box-shadow;

				font-size: #{"max(clamp(4cqw, 50px, 6cqw), 2em)"};
				font-weight: 800;
				@at-root #{selector.replace(&, ".section", ".section.subsection")} {
					font-size: #{"max(clamp(2cqw, 35px, 4cqw), 1.5em)"};
					font-weight: 600;
				}

				contain: paint;

				@include text-punch($weight: bold);

				.section-robot {
					position: absolute;
					bottom: 0;
					right: 0;
					transform: translateX(250px) translateY(30cqh);
					color: var(--color-top);
					font-size: $donate-robot-size;
					z-index: -1;

					text-shadow: none;
				}
			}

			.section-title a {
				color: white;
				text-decoration-color: white;

				text-decoration: none;
				&:hover {
					text-decoration: underline;
					filter: none;
				}
			}
		}

		@each $section-name, $section-colors in $sections {
			.section-#{$section-name} {
				--color-top: #{map.get($section-colors, "color-top")};
				--color-bottom: #{map.get($section-colors, "color-bottom")};
				--color-top-muted: #{map.get($section-colors, "color-top-muted")};
				--color-bottom-muted: #{map.get($section-colors, "color-bottom-muted")};
				--color-selection: #{map.get($section-colors, "color-selection")};
				--color-invert: #{map.get($section-colors, "color-invert")};
				--color-highlight: #{map.get($section-colors, "color-highlight")};
				--color-highlight-switch: #{map.get(
						$section-colors,
						"color-highlight--dark"
					)};
				--color-invert-highlight: #{map.get(
						$section-colors,
						"color-invert-highlight"
					)};
				@include release.is-light() {
					--color-selection: #{map.get(
							$section-colors,
							"color-selection--light"
						)};
				}
				@include release.is-dark() {
					--color-highlight: #{map.get(
							$section-colors,
							"color-highlight--dark"
						)};
					--color-highlight-switch: #{map.get(
							$section-colors,
							"color-highlight"
						)};
				}
			}
		}
	}
}

ul.list-style-none {
	padding-left: 0;

	& > li {
		list-style: none;
	}
}

@mixin span-3 {
	grid-column: span 3;

	@include screen-is-two-columns-wide() {
		grid-column: span 2;
	}

	@include screen-is-one-column-wide() {
		grid-column: span 1;
	}
}

@mixin span-2-at-3-col {
	grid-column: span 2;

	@include screen-is-two-columns-wide() {
		grid-column: span 1;
	}
}

@mixin span-2 {
	grid-column: span 2;

	@include screen-is-one-column-wide() {
		grid-column: span 1;
	}
}

.span-3 {
	@include span-3;
}

.span-2-at-3-col {
	@include span-2-at-3-col;
}

.span-2 {
	&:not(.temporary-span-3-col-3) {
		@include span-2;
	}
}

.temporary-span-2-col-2 {
	@include screen-is-two-columns-wide() {
		@include span-2;
	}
}

.temporary-span-2-col-3 {
	@include screen-is-three-columns-wide() {
		@include span-2;
	}
}

.temporary-span-3-col-3 {
	@include screen-is-three-columns-wide() {
		@include span-3;
	}
}

.align-right {
	text-align: right;
}

.overflow-y-hidden {
	overflow-y: hidden;
}

.no-break {
	white-space: nowrap;
}

.hidden {
	display: none;
}

// Internationalization live preview animation.
#internationalization-live-preview {
	.c-blockquote {
		position: relative;

		p {
			opacity: 0;
			user-select: none;

			&.entry {
				opacity: 1;
				user-select: initial;

				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
			}
		}
	}
}
